<html><head>

<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">



<link rel="stylesheet" type="text/css" href="primes_files/nopaste.css">

<link rel="icon" href="http://rafb.net/nopaste_favicon.gif" type="image/gif">

<link rel="shortcut icon" href="http://rafb.net/nopaste_favicon.gif" type="image/gif">

<meta name="robots" content="noarchive">

<title>Nopaste - Find primes fast</title>

<script type="text/javascript">



  var _gaq = _gaq || [];

  _gaq.push(['_setAccount', 'UA-16807791-2']);

  _gaq.push(['_trackPageview']);



  (function() {

    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;

    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);

  })();



</script>

</head><body><div style="border-bottom: 2px solid gray;">

<table border="0" cellpadding="1" cellspacing="2" width="100%">

<tbody><tr>

  <td><small>Pasted as <b>C++</b> by <b>Unknown</b> <span id="controls">[ <a href="http://commitcode.com/paste/">Create new paste</a> ]</span></small></td>

</tr>

<tr>

  <td><small>Description: Find primes fast</small></td>

</tr>

<tr>

  <td><small>URL: http://commitcode.com/paste/results/jW6WumUZqA.html</small></td>

</tr>

</tbody></table>

</div>



<table border="0" cellpadding="1" cellspacing="2">

<tbody><tr>

  <td><pre class="code">1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

26

27

28

29

30

31

32

33

34

35

36

37

38

39

40

41

42</pre></td>

  <td width="100%"><pre class="code" id="codemain"><span class="keyword">#include</span>&lt;iostream&gt;<span class="keyword">

#include</span>&lt;cstdlib&gt;

&nbsp;

<span class="keyword">using</span> <span class="keyword">namespace</span> std;

&nbsp;

<span class="keyword">int</span> main(){

  <span class="keyword">int</span> num, numprimes = 1;

  <span class="keyword">int</span> *primes,*temp; <span class="comment">// i'm not sure if temp will be necessary to prevent memory leaks maybe someone could tell me

</span>&nbsp;

  <span class="keyword">bool</span> prime;

&nbsp;

  primes = (<span class="keyword">int</span>*)malloc(1*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));

  primes[0] = 2;

&nbsp;

  cout &lt;&lt; <span class="literal">"Please enter a positive integer"</span> &lt;&lt; endl;

&nbsp;

  cin &gt;&gt; num;

&nbsp;

  <span class="keyword">for</span>(<span class="keyword">int</span> i = 3; i &lt;= num; i++){

    prime = <span class="keyword">true</span>;

    <span class="keyword">for</span>(<span class="keyword">int</span> n = 0; n &lt; numprimes; n++){

&nbsp;

      <span class="keyword">if</span>(i % primes[n] == 0){  <span class="comment">/* if it is divisible by a compound number, then it was definitely divisible by a lesser prime.

                                  why bother with compounds? */</span>

&nbsp;

        prime = <span class="keyword">false</span>;

        <span class="keyword">break</span>;                    <span class="comment">// this might also speed things up

</span>      }

    }

    <span class="keyword">if</span>(prime){

&nbsp;

      cout &lt;&lt; i &lt;&lt; <span class="literal">" is prime"</span> &lt;&lt; endl;

      temp = (<span class="keyword">int</span>*)realloc(primes,(++numprimes)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));

&nbsp;

      <span class="keyword">if</span>(temp != primes) free(primes);

      primes = temp;

      primes[numprimes-1] = i;

    }

  }

&nbsp;

  <span class="keyword">return</span> 0;

}</pre></td>

</tr>

</tbody></table>

</body></html>

